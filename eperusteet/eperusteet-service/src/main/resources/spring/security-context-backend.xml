<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security.xsd">

    <http entry-point-ref="forbiddenEntryPoint" use-expressions="true" request-matcher="regex" pattern="/buildversion.txt">
        <intercept-url pattern="/**" access="permitAll"/>
    </http>

    <http entry-point-ref="casEntryPoint" use-expressions="true" request-matcher="regex" pattern="/j_spring_cas_security_check.*">
        <intercept-url pattern="/**" access="${spring_security_default_access}"/>
        <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
        <custom-filter ref="casFilter" position="CAS_FILTER"/>
    </http>

    <http entry-point-ref="casEntryPoint" use-expressions="true" request-matcher="regex">
        <intercept-url pattern="/api/palaute" access="permitAll" method="POST"/>
        <intercept-url pattern="/api/.*" access="isAuthenticated()" method="POST"/>
        <intercept-url pattern="/api/.*" access="isAuthenticated()" method="PUT"/>
        <intercept-url pattern="/api/.*" access="isAuthenticated()" method="DELETE"/>
        <intercept-url pattern="/api/.*" access="isAuthenticated()" method="PATCH"/>
        <intercept-url pattern="(/.*)?/secured(/.*)?" access="isAuthenticated()"/>
        <intercept-url pattern="/public(/.*)?" access="permitAll"/>
        <intercept-url pattern="/**" access="${spring_security_default_access}"/>
        <custom-filter ref="casFilter" position="CAS_FILTER"/>
        <csrf disabled="true"/>
    </http>

    <beans:bean id="casFilter" class="fi.vm.sade.java_utils.security.OpintopolkuCasAuthenticationFilter">
        <beans:constructor-arg ref="casServiceProperties"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
<!--        <beans:property name="proxyGrantingTicketStorage" ref="pgtStorage"/>-->
        <beans:property name="proxyReceptorUrl" value="/j_spring_cas_security_proxyreceptor"/>
        <beans:property name="filterProcessesUrl" value="/j_spring_cas_security_check"/>
    </beans:bean>

    <!-- This filter handles a Single Logout Request from the CAS Server -->
    <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter">
        <beans:property name="ignoreInitConfiguration" value="true"/>
    </beans:bean>

<!--    <beans:bean id="pgtStorage" class="org.jasig.cas.client.proxy.EhcacheBackedProxyGrantingTicketStorageImpl">-->
<!--        <beans:constructor-arg name="cache">-->
<!--            <beans:bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">-->
<!--                <beans:property name="cacheManager" ref="casTicketCache"/>-->
<!--                <beans:property name="maxElementsInMemory" value="100000"/>-->
<!--                <beans:property name="maxElementsOnDisk" value="10000000"/>-->
<!--                <beans:property name="overflowToDisk" value="true"/>-->
<!--                <beans:property name="cacheName" value="casProxyGrantingTickets"/>-->
<!--                <beans:property name="timeToLive" value="7200"/>-->
<!--                <beans:property name="timeToIdle" value="7200"/>-->
<!--                <beans:property name="eternal" value="false"/>-->
<!--            </beans:bean>-->
<!--        </beans:constructor-arg>-->
<!--    </beans:bean>-->

    <beans:bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <beans:property name="loginUrl" value="${web.url.cas}/login"/>
        <beans:property name="serviceProperties" ref="casServiceProperties"/>
    </beans:bean>

    <beans:bean id="forbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="casAuthenticationProvider"/>
    </authentication-manager>

<!--    <beans:bean id="casTicketsCacheBean" class="org.springframework.cache.ehcache.EhCacheFactoryBean">-->
<!--        <beans:property name="cacheManager" ref="casTicketCache"/>-->
<!--        <beans:property name="diskExpiryThreadIntervalSeconds" value="120"/>-->
<!--        <beans:property name="diskPersistent" value="false"/>-->
<!--        <beans:property name="maxElementsInMemory" value="100000"/>-->
<!--        <beans:property name="maxElementsOnDisk" value="10000000"/>-->
<!--        <beans:property name="memoryStoreEvictionPolicy" value="LRU"/>-->
<!--        <beans:property name="overflowToDisk" value="true"/>-->
<!--        <beans:property name="cacheName" value="casTickets"/>-->
<!--        <beans:property name="timeToLive" value="7200"/>-->
<!--        <beans:property name="timeToIdle" value="7200"/>-->
<!--        <beans:property name="eternal" value="false"/>-->
<!--    </beans:bean>-->

<!--    <beans:bean id="ehCacheBasedTicketCache" class="org.springframework.security.cas.authentication.EhCacheBasedTicketCache">-->
<!--        <beans:property name="cache" ref="casTicketsCacheBean"/>-->
<!--    </beans:bean>-->

    <beans:bean id="casAuthenticator" class="fi.vm.sade.javautils.http.auth.CasAuthenticator">
        <beans:constructor-arg index="0" value="${web.url.cas}"/>
        <beans:constructor-arg index="1" value="${fi.vm.sade.eperusteet.oph_username}"/>
        <beans:constructor-arg index="2" value="${fi.vm.sade.eperusteet.oph_password}"/>
        <beans:constructor-arg index="3" value="${host.alb}"/>
        <beans:constructor-arg index="4"><beans:null/></beans:constructor-arg>
        <beans:constructor-arg index="5" value="false"/>
        <beans:constructor-arg index="6"><beans:null/></beans:constructor-arg>
    </beans:bean>

    <beans:bean id="userDetailsService" class="fi.vm.sade.javautils.kayttooikeusclient.OphUserDetailsServiceImpl">
        <beans:constructor-arg index="0" value="${host.alb}"/>
        <beans:constructor-arg index="1" value="eperusteet"/>
        <beans:constructor-arg index="2" ref="casAuthenticator"/>
    </beans:bean>

    <beans:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="serviceProperties" ref="casServiceProperties"/>
        <beans:property name="ticketValidator" ref="casTicketValidator"/>
        <beans:property name="key" value="${cas_key}"/>
        <!-- enable proxy authentication (in backend) -->
<!--        <beans:property name="statelessTicketCache" ref="ehCacheBasedTicketCache"/>-->
    </beans:bean>

    <beans:bean id="casTicketValidator" class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator">
        <!-- enable proxy authentication (in front proxy) -->
        <beans:constructor-arg index="0" value="${web.url.cas}"/>
        <beans:property name="proxyCallbackUrl" value="${cas_service}/j_spring_cas_security_proxyreceptor"/>
<!--        <beans:property name="proxyGrantingTicketStorage" ref="pgtStorage"/>-->
        <beans:property name="acceptAnyProxy" value="true"/>
    </beans:bean>

<!--    <beans:bean id="casTicketCache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
<!--        <beans:property name="configLocation" value="file://${user.home}/oph-configuration/ehcache.xml"/>-->
<!--        <beans:property name="shared" value="false"/>-->
<!--        <beans:property name="cacheManagerName" value="casTicketCache"/>-->
<!--    </beans:bean>-->

    <beans:bean id="casServiceProperties" class="org.springframework.security.cas.ServiceProperties">
        <beans:property name="service" value="${cas_service}/j_spring_cas_security_check"/>
        <beans:property name="sendRenew" value="${cas.sendRenew}"/>
        <beans:property name="authenticateAllArtifacts" value="true"/>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:property name="allowIfAllAbstainDecisions" value="true"/>
        <beans:constructor-arg>
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.RoleVoter"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>
